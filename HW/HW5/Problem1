For each of the following recurrences, verify the answer you get by applying the master method, by solving the recurrence algebraically OR applying the recursion tree method. 

1 T(N) = 2T(N-1) + 1
2 T(N) = 3T(N-1) + n
3 T(N) = 9T(N/2) + n2
4 T(N) = 100T(N/2) + nlog2cn + 1  (c is a constant)
5 T(N) = 4T(N/2) + n2logn
6 T(N) = 5T(N/2) + n2/logn

1. T(N) = 2T(N-1) + 1
T(N-1) = 2T(N-2) + 1
T(N-2) = 2T(N-3) + 1

T(N) = 2(2T(N-2) + 1) + 1 = 4T(N-2) + 2
T(N) = 4(2T(N-3) + 1) + 2 = 8T(N-3) + 3

Let N-k = 0
∴ N = k
∴ T(N) = (2^N)T(0) + N
∴ T(N) = 2^N + N
